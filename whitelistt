-- This file was generated using Luraph Obfuscator v13.6.6

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v67=0;local v68;while true do if (v67==0) then v68=v2(v0(v20,16));if v19 then local v90=v5(v68,v19);v19=nil;return v90;else return v68;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v69=(v22/(((3 -2) + (1245 -(362 + 882)))^(v23-1)))%((3 -1)^(((v24-(2 -1)) -(v23-(700 -(648 + 51)))) + 1 + 0)) ;return v69-(v69%(1 + 0)) ;else local v70=(1087 -(221 + 864))^(v23-1) ;return (((v22%(v70 + v70))>=v70) and (3 -2)) or 0 ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (6 -4) );v18=v18 + 2 ;return (v40 * (164 + 92)) + v39 ;end local function v27()local v41,v42,v43,v44=v1(v16,v18,v18 + ((5 + 0) -2) );v18=v18 + 3 + 1 ;return (v44 * (16779031 -(1434 + 381))) + (v43 * (11478 + 54058)) + (v42 * (160 + 96)) + v41 ;end local function v28()local v45=v27();local v46=v27();local v47=1;local v48=(v21(v46,1 + 0 ,1039 -(625 + 394) ) * ((3 -(1220 -(761 + 458)))^(60 -28))) + v45 ;local v49=v21(v46,6 + 15 ,10 + 21 );local v50=((v21(v46,182 -(30 + 120) )==(1 -0)) and  -(1111 -((785 -(363 + 92)) + 780))) or 1 ;if (v49==(0 + 0)) then if (v48==(590 -(258 + 332))) then return v50 * 0 ;else local v77=1556 -(37 + 663 + 856) ;while true do if ((0 + 0)==v77) then v49=1;v47=0 + 0 ;break;end end end elseif (v49==(2806 -(573 + 82 + 104))) then return ((v48==0) and (v50 * ((1572 -(531 + 1040))/(0 -0)))) or (v50 * NaN) ;end return v8(v50,v49-(2742 -(8 + 1711)) ) * (v47 + (v48/((2 + (403 -(235 + 168)))^(1051 -(453 + 546))))) ;end local function v29(v30)local v51;if  not v30 then local v71=0 -0 ;while true do if (v71==(0 -0)) then v30=v27();if (v30==(0 + 0)) then return "";end break;end end end v51=v3(v16,v18,(v18 + v30) -(1 + 0) );v18=v18 + v30 ;local v52={};for v65=1 -0 , #v51 do v52[v65]=v2(v1(v3(v51,v65,v65)));end return v6(v52);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v53=0 + 0 ;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v53==(1068 -(855 + 212))) then local v72=0 + 0 ;while true do if (v72==(3 -2)) then v53=1777 -(987 + 788) ;break;end if (v72~=(0 + 0)) then else v56=nil;v57=nil;v72=2 -1 ;end end end if ((1129 -(942 + 185))~=v53) then else local v73=0 + 0 ;while true do if (v73==(952 -(238 + 713))) then v53=9 -6 ;break;end if (v73==0) then v58=nil;v59=nil;v73=1167 -(697 + 469) ;end end end if (v53~=(930 -(697 + 230))) then else v60=nil;while true do if (v54==(1 + 0)) then local v84=0 -0 ;local v85;while true do if (v84~=(0 -0)) then else v85=0;while true do if (v85==(986 -(734 + 252))) then v58={v55,v56,nil,v57};v59=v27();v85=1 + 0 ;end if (v85==(1367 -(1182 + 184))) then v60={};v54=2;break;end end break;end end end if (v54==(1336 -(812 + 524))) then v55={};v56={};v57={};v54=2 -1 ;end if (v54~=(1 + 2)) then else local v86=0 + 0 ;local v87;while true do if (v86==(582 -(371 + 211))) then v87=27 -(6 + 21) ;while true do local v105=0 -0 ;while true do if (0==v105) then if (v87==1) then return v58;end if (v87==(0 + 0)) then for v123=817 -(165 + 651) ,v27() do v56[v123-(1 + 0) ]=v33();end for v125=2 -1 ,v27() do v57[v125]=v27();end v87=1;end break;end end end break;end end end if ((1040 -(509 + 529))==v54) then local v88=955 -(109 + 846) ;local v89;while true do if (v88==(579 -(371 + 208))) then v89=0;while true do if (v89==0) then for v111=1 -0 ,v59 do local v112=0 -0 ;local v113;local v114;local v115;local v116;while true do if (v112==(1 + 0)) then v115=nil;v116=nil;v112=2;end if (v112==(0 -0)) then v113=0 + 0 ;v114=nil;v112=1 + 0 ;end if (v112==(4 -2)) then while true do if (v113==(1865 -(478 + 1386))) then v116=nil;while true do if (v114==(0 -0)) then local v133=754 -(611 + 143) ;local v134;while true do if (v133==(171 -(40 + 131))) then v134=0;while true do if ((0 -0)==v134) then local v205=0 + 0 ;while true do if (v205==0) then v115=v25();v116=nil;v205=1 -0 ;end if (1==v205) then v134=1;break;end end end if (v134==1) then v114=2 -1 ;break;end end break;end end end if (v114==(1 -0)) then if (v115==(4 -3)) then v116=v25()~=0 ;elseif (v115==(3 -1)) then v116=v28();elseif (v115~=(1304 -(1277 + 24))) then else v116=v29();end v60[v111]=v116;break;end end break;end if ((0 + 0)==v113) then v114=0 + 0 ;v115=nil;v113=1 + 0 ;end end break;end end end v58[1733 -(1197 + 533) ]=v25();v89=2 -1 ;end if (v89==(2 -1)) then for v117=1400 -(725 + 674) ,v27() do local v118=0;local v119;local v120;while true do if ((0 -0)~=v118) then else v119=0 -0 ;v120=nil;v118=1;end if (v118~=(1 + 0)) then else while true do if (v119==(0 -0)) then v120=v25();if (v21(v120,560 -(519 + 40) ,1 -0 )~=0) then else local v127=1715 -(135 + 1580) ;local v128;local v129;local v130;while true do if (v127==1) then local v147=626 -(28 + 598) ;while true do if (v147~=(427 -(49 + 378))) then else v130={v26(),v26(),nil,nil};if (v128==(0 -0)) then local v208=0 + 0 ;local v209;local v210;while true do if (v208==(772 -(586 + 186))) then v209=1244 -(247 + 997) ;v210=nil;v208=1004 -(916 + 87) ;end if (v208~=(1 + 0)) then else while true do if ((0 -0)==v209) then v210=0;while true do if (v210~=(0 -0)) then else v130[1880 -(955 + 922) ]=v26();v130[4]=v26();break;end end break;end end break;end end elseif (v128==(1 + 0)) then v130[75 -(24 + 48) ]=v27();elseif (v128==(2 -0)) then v130[1735 -(569 + 1163) ]=v27() -(2^16) ;elseif (v128==(13 -(7 + 3))) then local v253=0;local v254;while true do if ((1044 -(17 + 1027))==v253) then v254=0;while true do if (v254~=(0 -0)) then else v130[3]=v27() -((2 + 0)^(33 -17)) ;v130[1648 -(430 + 1214) ]=v26();break;end end break;end end end v147=1;end if (v147~=(891 -(452 + 438))) then else v127=2;break;end end end if (v127==(1 + 2)) then if (v21(v129,3 + 0 ,1663 -(624 + 1036) )==(3 -2)) then v130[4]=v60[v130[1 + 3 ]];end v55[v117]=v130;break;end if (v127~=2) then else local v149=0 -0 ;while true do if ((1415 -(120 + 1294))~=v149) then else v127=3;break;end if (v149==(0 + 0)) then if (v21(v129,38 -(17 + 20) ,1 + 0 )~=1) then else v130[3 -1 ]=v60[v130[2]];end if (v21(v129,5 -3 ,4 -2 )==(1 + 0)) then v130[8 -5 ]=v60[v130[1624 -(1528 + 93) ]];end v149=1 + 0 ;end end end if ((0 + 0)==v127) then local v150=0 -0 ;while true do if (v150~=(0 -0)) then else local v201=690 -(61 + 629) ;while true do if (v201~=(52 -(39 + 13))) then else v128=v21(v120,1542 -(445 + 1095) ,3 -0 );v129=v21(v120,255 -(81 + 170) ,806 -(5 + 795) );v201=1;end if (v201~=(1 + 0)) then else v150=1 -0 ;break;end end end if (v150~=1) then else v127=1179 -(1104 + 74) ;break;end end end end end break;end end break;end end end v54=2 + 1 ;break;end end break;end end end end break;end if (v53==(386 -(87 + 299))) then v54=0 -0 ;v55=nil;v53=3 -2 ;end end end local function v34(v35,v36,v37)local v61=0;local v62;local v63;local v64;while true do if (1==v61) then v64=v35[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==3) then A,B=v32(v11(v83));if  not A[1] then local v101=v35[4][v79] or "?" ;error("Script error at ["   .. v101   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (2==v78) then v83=nil;v83=function()local v91=v62;local v92=v63;local v93=v64;local v94=v32;local v95={};local v96={};local v97={};for v102=0 + 0 ,v82 do if (((1316 + 1786)>(130 + 33)) and (v102>=v93)) then v95[v102-v93 ]=v81[v102 + ((3778 -2285) -(190 + 1302)) ];else v97[v102]=v81[v102 + (352 -(138 + 213)) ];end end local v98=(v82-v93) + 1 + 0 ;local v99;local v100;while true do local v103=0 -0 ;local v104;while true do if ((v103==(0 + 0)) or (2729<=(2406 -1263))) then v104=0;while true do if (((4610 -1653)<=(5275 -(478 + 117))) and (v104==(1631 -(1331 + 299)))) then if (((4321 -(384 + 1118))<=((22211 -9707) -(3786 + 4484))) and (v100<=((2350 -427) -(207 + 1704)))) then if ((v100<=(6 -1)) or ((6231 -(510 + 1293))==(1261 -(43 + 1187)))) then if (((2938 -1988)<=(1181 + 3441)) and (v100<=(17 -(11 + 4)))) then if ((3474==(389 + 3085)) and (v100<=(1527 -(398 + 1129)))) then if (((90 + 1217)<=(2877 -(37 + 803 + 115))) and  not v97[v99[2]]) then v79=v79 + (680 -(266 + 413)) ;else v79=v99[(11 -5) -(1710 -(1698 + 9)) ];end elseif ((2897<(3517 + 1251)) and (v100==(1 -0))) then if (((3517 -(799 + 686))>=1787) and v97[v99[2 + 0 ]]) then v79=v79 + (1 -0) ;else v79=v99[5 -2 ];end else do return;end end elseif ((v100<=3) or ((4545 -(313 + 250))==((2490 -(1228 + 570)) + 274))) then local v136=0 -0 ;local v137;local v138;local v139;while true do if ((v136==0) or ((2079 -(1298 + 347))>=((2506 -(107 + 870)) -723))) then v137=257 -(151 + 106) ;v138=nil;v136=1 -0 ;end if (((2 -1)==v136) or ((1391 + 297)<=(96 + 19))) then v139=nil;while true do if ((v137==1) or (691>=(2094 + 280))) then v97[v138 + (20 -(16 + 3)) ]=v139;v97[v138]=v139[v99[4]];break;end if (((7221 -(19343 -13905))<=(15639 -(43812 -32814))) and (v137==(0 -0))) then local v218=(7392 -5461) -(645 + 1286) ;local v219;while true do if (((139 -(120 + 19))==v218) or ((4955 -(438 + 38))<=(4885 -(284 + 275)))) then v219=0 -0 ;while true do if (((1986 -(63 + 734))<(8414 -3481)) and (v219==(0 + 0 + 0))) then v138=v99[170 -(110 + 58) ];v139=v97[v99[8 -5 ]];v219=1;end if (((35 + 23)<=(277 + 467)) and (v219==1)) then v137=2 -1 ;break;end end break;end end end end break;end end elseif ((3913>(2758 -(436 + 1077))) and (v100==(15 -11))) then v37[v99[2 + 1 ]]=v97[v99[2 + 0 + 0 ]];else local v154=1068 -((1136 -(458 + 100)) + 490) ;local v155;local v156;while true do if (((1537 -(325 + 328))<=(902 + 1968)) and (v154==(0 -0))) then v155=609 -((1298 -(232 + 819)) + 362) ;v156=nil;v154=1 + 0 ;end if ((v154==(2 -1)) or ((6888 -(354 + 1573))==(12969 -9122))) then while true do if ((v155==(0 + 0)) or (3050>=(8504 -5357))) then v156=v97[v99[1 + 3 ]];if ((1741>1254) and  not v156) then v79=v79 + 1 ;else local v244=0 -0 ;while true do if ((v244==(0 + 0)) or ((1537 + (2220 -1610))<=(2426 -((2487 -1228) + 147)))) then v97[v99[1542 -(1003 + 537) ]]=v156;v79=v99[5 -2 ];break;end end end break;end end break;end end end elseif ((v100<=(19 -11)) or (1754>(1841 + 1944))) then if (((1672 + 3015)>=(1875 + 971)) and (v100<=(2 + 4))) then v97[v99[2 + 0 ]]=v97[v99[4 -1 ]][v99[811 -(28 + 779) ]];elseif ((4430==(14195 -9765)) and (v100==(2 + 5))) then local v157=1791 -(1045 + 746) ;local v158;local v159;local v160;while true do if ((v157==(0 -0)) or ((592 + 63)==(11607 -7183))) then v158=0 -0 ;v159=nil;v157=1021 -(502 + 518) ;end if ((v157==(230 -(77 + 152))) or ((3761 -(64 + 1591))<=((1637 -(394 + 1230)) + 488))) then v160=nil;while true do if ((((2786 -(543 + 397)) + 383)>(3160 -1936)) and (v158==0)) then local v224=0;while true do if (((473 -249)<=(4277 -(938 + 119))) and (v224==(0 + 0))) then v159=v99[1965 -(607 + 1356) ];v160={};v224=115 -(27 + 87) ;end if ((v224==1) or ((1356 + 3426)<=4389)) then v158=3 -2 ;break;end end end if ((v158==(2 -1)) or ((13931 -9760)==(2173 + 619))) then for v235=1, #v96 do local v236=0 + 0 ;local v237;while true do if ((3820==(4001 -(111 + 70))) and (v236==(0 -0))) then v237=v96[v235];for v264=0, #v237 do local v265=0 -0 ;local v266;local v267;local v268;local v269;while true do if ((4539==4539) and (v265==0)) then v266=0;v267=nil;v265=1855 -(152 + 1702) ;end if (((203 + 311)<(2406 -(1396 + 232))) and (v265==(1 + 1))) then while true do if ((0==v266) or ((748 -(26 + 48))==(2353 + 455))) then local v291=0 -0 ;while true do if ((((9356 -6620) -(1186 + 674))<(5794 -3357)) and ((1518 -(87 + 1431))==v291)) then v267=v237[v264];v268=v267[802 -(6 + 795) ];v291=(1650 -(42 + 78)) -((1902 -(523 + 627)) + 777) ;end if ((v291==1) or ((5660 -(456 + 915 + 619))==1301)) then v266=236 -(23 + 79 + (376 -243)) ;break;end end end if (((6651 -(416 + 1565))>119) and (v266==(1963 -(1540 + 422)))) then v269=v267[2];if (((2203 + (2046 -1292))==(10548 -(22421 -14830))) and (v268==v97) and (v269>=v159)) then local v295=1338 -(419 + 919) ;local v296;local v297;while true do if (((1809 -1052)<((1279 -(47 + 587)) + 425)) and (v295==(0 + 0 + 0))) then v296=0 -0 ;v297=nil;v295=(941 -418) -(481 + 41) ;end if (((76 + 283)<(725 + (6736 -3388))) and (v295==((1354 -(260 + 1091)) -2))) then while true do if (((137 + 964)<=(246 + 4737)) and (v296==(0 + 0))) then v297=0;while true do if ((v297==(0 + 0)) or ((9224 -4477)<=3637)) then v160[v269]=v268[v269];v267[1194 -((211 -(11 + 95)) + 1088) ]=v160;break;end end break;end end break;end end end break;end end break;end if (((4992 -(674 + 623))>(2078 -(1188 + 796))) and (v265==(1507 -(458 + 1048)))) then v268=nil;v269=nil;v265=2;end end end break;end end end break;end end break;end end else for v199=v99[1 + 1 ],v99[1 + 0 + 2 ] do v97[v199]=nil;end end elseif ((v100<=(17 -7)) or ((1680 + 1710)>=(6764 -(3533 -(1073 + 93))))) then if ((v100==(6 + 3)) or ((4392 -(350 + 767))==(966 -641))) then v97[v99[2 + 0 ]][v99[3]]=v99[4];elseif ((v99[1987 -(498 + 1487) ]==v97[v99[10 -6 ]]) or ((1750 -(60 + 468))==(5081 -(645 + 1112)))) then v79=v79 + 1 + (0 -0) ;else v79=v99[3];end elseif ((((1812 -(202 + 399)) + 36)<=((17813 -13112) -1868)) and (v100>(592 -(97 + 319 + 165)))) then v97[v99[2]]=v37[v99[3 + 0 ]];else v97[v99[5 -3 ]]();end elseif ((215<=1618) and (v100<=19)) then if (((1000 -349)<=(905 + 2044)) and (v100<=(652 -(362 + 275)))) then if ((((3794 -(31 + 293)) + 329)==3799) and (v100<=13)) then v97[v99[1762 -(387 + 1373) ]][v99[3 + 0 + 0 ]]=v97[v99[4]];elseif ((v100>(7 + 7)) or ((3119 + 1551)==(2963 + 845))) then v97[v99[4 -2 ]]=v99[(359 -(102 + 256)) + 2 ];else v97[v99[9 -7 ]]=v97[v99[3 + 0 ]];end elseif ((v100<=(1691 -(1309 + 365))) or (((6137 + 114) -(352 + 941))<=(3347 + 716))) then if ((v100>16) or ((689 + 224)>(2263 -965))) then local v169=0;local v170;local v171;local v172;local v173;while true do if ((v169==(2 -1)) or ((3101 -(1230 + 676))>(4163 -(888 + 666)))) then v172=nil;v173=nil;v169=2 + 0 ;end if ((v169==(419 -(287 + 130))) or ((3029 -(15 + 25))<=(8 + 2522))) then while true do if (((3178 + 1448)>(218 + 89)) and (v170==(208 -((1288 -(598 + 491)) + 9)))) then local v225=0 + 0 ;while true do if (((77 -(25 + 51))==v225) or ((5899 -1935)<=((1035 + 912) -(771 + 1013)))) then v170=307 -(29 + 277) ;break;end if ((v225==0) or ((1004 -(539 + 61))>(1123 -388))) then v171=v99[1 + 1 ];v172=v97[v171];v225=1;end end end if ((v170==(1 -0)) or ((1451 + 1655)>(5208 -((4442 -3212) + 186)))) then v173=v99[1 + 2 ];for v238=1,v173 do v172[v238]=v97[v171 + v238 ];end break;end end break;end if ((4109<((6600 + 1826) -3432)) and (v169==(0 -0))) then v170=0;v171=nil;v169=1;end end elseif (((646 + 1892)>(2880 -(170 + (2665 -(1633 + 193))))) and (v97[v99[2 + (0 -0) ]]==v99[4])) then v79=v79 + 1 + 0 ;else v79=v99[8 -5 ];end elseif ((v100==(16 + 2)) or ((2092 + 1434)>((3011 -1205) + (9175 -6646)))) then v97[v99[(9 -7) -0 ]]={};else local v175=0 -0 ;local v176;local v177;local v178;while true do if (((12386 -8707)>(1468 -(373 + 308 + 53))) and (v175==((120 -(96 + 23)) + 0))) then v178=nil;while true do if ((v176==(0 + 0)) or (3282==(4640 -(670 + 589)))) then local v227=0 + 0 ;while true do if (((2587 + 603)>773) and (v227==1)) then v176=1;break;end if ((((1237 + 6500) -5923)>=(137 + 6)) and ((0 + 0)==v227)) then local v248=0 + 0 ;while true do if ((v248==(1 + 0 + 0)) or ((3710 -(98 + (1078 -(392 + 361))))<=(2184 -(760 + 357)))) then v227=1;break;end if ((v248==(0 + 0)) or ((6803 -4657)==((4885 -(96 + 1651)) + 576))) then v177=v99[777 -(352 + (1328 -(707 + 199))) ];v178=v97[v177];v248=414 -(409 + 4) ;end end end end end if (((1013 -603)==410) and (v176==(173 -(119 + 53)))) then for v241=v177 + 1 + 0 ,v99[3 + 1 ] do v178=v178   .. v97[v241] ;end v97[v99[1860 -(1423 + 435) ]]=v178;break;end end break;end if ((v175==0) or ((2314 -(229 + 110))<579)) then v176=0;v177=nil;v175=3 -2 ;end end end elseif ((v100<=(1866 -(850 + 994))) or (1099<=159)) then if (((16 + (1856 -(189 + 920)))<(4831 -(211 + 76))) and (v100<=20)) then local v144=0 -0 ;local v145;local v146;while true do if (((3228 -(912 + 144))==(595 + 1577)) and (v144==(0 -(375 -(153 + 222))))) then v145=1934 -(1130 + 804) ;v146=nil;v144=1 + 0 ;end if (((3686 -2150)==(1456 + 80)) and (v144==(1731 -(1110 + 620)))) then while true do if ((v145==0) or ((3698 -(1117 + 12 + 6))>2664)) then v146=v99[5 -3 ];v97[v146]=v97[v146](v13(v97,v146 + 1 + 0 + 0 ,v99[3]));break;end end break;end end elseif ((v100>(20 + 1)) or ((711 + 12)==((7413 -5305) + 1825))) then local v179=0;local v180;local v181;local v182;local v183;local v184;while true do if (((6418 -4603)<(5872 -1676)) and (v179==(1818 -(987 + 829)))) then v184=nil;while true do if ((v180==(2 + (1870 -(148 + 1722)))) or (3471<=((3466 + 60) -(639 + 41)))) then while true do if (((5734 -(1814 + 23))<((2662 + 7882) -6124)) and (v181==(1417 -((1008 -377) + 785)))) then local v249=0;local v250;while true do if ((v249==(778 -(8 + (999 -(152 + 77))))) or (4478<(3646 -(408 + 331)))) then v250=0 -0 ;while true do if (((6398 -(1622 + 317))>=(3177 + 1027)) and (v250==(0 + 0))) then v184={};v183=v10({},{__index=function(v277,v278)local v283=0;local v284;local v285;local v286;while true do if ((v283==(1896 -(1700 + 195))) or ((191 -134)>=(100 + 2499))) then v286=nil;while true do if ((v284==(0 + 0)) or (2129>((2868 -1999) + 1952))) then local v302=(553 -(516 + 37)) + 0 ;while true do if (((10685 -5820)==(6819 -(1318 + 636))) and (v302==(1 -0))) then v284=1 + 0 ;break;end if (((14447 -9874)>=(394 + 320)) and (v302==(0 + (0 -0)))) then v285=270 -(146 + 124) ;v286=nil;v302=1;end end end if ((v284==(1329 -(1136 + 192))) or (3517<((313 + 2981) -2087))) then while true do if (((1251 + 2424)>(3404 -(35 + 18))) and (v285==0)) then local v303=0;while true do if ((v303==0) or ((842 -(61 + (1269 -928)))==(1819 -1021))) then v286=v184[v278];return v286[483 -((412 -176) + 246) ][v286[1979 -(1536 + 441) ]];end end end end break;end end break;end if (((3243 -(892 + 234))<(49 + 4481)) and ((0 + 0)==v283)) then v284=0 -0 ;v285=nil;v283=1 -0 ;end end end,__newindex=function(v277,v278,v279)local v287=124 -(97 + 27) ;local v288;while true do if (((1828 + (2153 -815))>=(64 + 45)) and (v287==(1393 -(1088 + (1978 -(1216 + 457)))))) then v288=v184[v278];v288[1][v288[1990 -(1386 + 602) ]]=v279;break;end end end});v250=1;end if (((947 -343)<=((3864 -(889 + 1074)) -984)) and (v250==1)) then v181=97 -(59 + 36) ;break;end end break;end end end if ((v181==(0 + 0)) or (((5087 -3485) -(196 + 501))>(4292 + 113))) then local v251=1536 -(313 + 1223) ;while true do if ((v251==1) or ((321 + 2305)>=(2779 + 828))) then v181=1 + (0 -0) ;break;end if ((v251==(0 -0)) or (2833>(7800 -3144))) then local v272=0 -0 ;while true do if ((4085>=(7935 -4758)) and (v272==((1239 -(502 + 736)) + 0))) then v251=1 -0 ;break;end if ((v272==(0 + 0)) or (4706<=(4746 -(130 + 417)))) then v182=v92[v99[7 -4 ]];v183=nil;v272=807 -(704 + 102) ;end end end end end if (((2714 -(535 + 201))<(5310 -2309)) and (v181==(7 -5))) then for v258=3 -2 ,v99[11 -7 ] do local v259=1780 -(1038 + 742) ;local v260;local v261;while true do if (((5771 -(751 + 272))==(18353 -13605)) and (v259==1)) then while true do if (((890 + 654)<=(2422 + 809)) and (v260==(284 -(28 + 256)))) then v79=v79 + 1 ;v261=v91[v79];v260=1 + 0 ;end if ((v260==(1224 -(397 + 826))) or ((2198 -1454)==(1175 -(518 + 543)))) then if (((59 + 50 + 332)>=(856 -624)) and (v261[669 -(12 + 106 + 550) ]==(8 + 6))) then v184[v258-1 ]={v97,v261[3 + 0 ]};else v184[v258-(1 + 0) ]={v36,v261[3 + 0 ]};end v96[ #v96 + (2 -(3 -2)) ]=v184;break;end end break;end if (((648 + 741)<=2432) and (0==v259)) then v260=0 -0 ;v261=nil;v259=1526 -(1085 + 440) ;end end end v97[v99[5 -(10 -7) ]]=v34(v182,v183,v37);break;end end break;end if ((1==v180) or ((12536 -8798)<(2883 + 426))) then local v229=0 + 0 ;while true do if ((v229==(0 -0)) or (4783==(2876 + 53 + 120))) then v183=nil;v184=nil;v229=1;end if (((1 + 0)==v229) or ((3918 -(459 + 671))==(692 -(217 + 56)))) then v180=6 -4 ;break;end end end if (((4346 -(6 + 421))==3919) and (v180==(143 -(131 + 12)))) then local v230=425 -(283 + 142) ;while true do if ((v230==(0 + 0)) or ((123 + 1498)>=(24 + 7 + 4331))) then v181=0;v182=nil;v230=1;end if (((3726 -(796 + 1151))>=961) and (v230==(1 + 0))) then v180=990 -(336 + 653) ;break;end end end end break;end if (((2897 -(44 + 35))>1488) and (v179==0)) then v180=(0 + 0) -0 ;v181=nil;v179=1 + 0 ;end if ((295<=(6014 -3760)) and (v179==(1 -0))) then v182=nil;v183=nil;v179=1250 -(1179 + 69) ;end end else v97[v99[5 -3 ]]=v36[v99[13 -10 ]];end elseif (((16749 -12370)>(1281 + 2356)) and (v100<=(1549 -(254 + 1271)))) then if ((694<(6499 -(7 + 29 + 1886))) and (v100>(13 + 10))) then local v187=0 + 0 ;local v188;local v189;while true do if (((6531 -(859 + 1076))<((2925 -(517 + 877)) + 3117)) and (v187==(1289 -(548 + 741)))) then v188=0;v189=nil;v187=1 -0 ;end if ((175<=651) and (v187==(1 + 0))) then while true do if ((v188==((154 -(90 + 64)) -0)) or (((3687 -(898 + 833)) -675)>=((3405 + 446) -(182 + 152)))) then v189=v99[293 -(274 + 17) ];v97[v189]=v97[v189](v97[v189 + (469 -(313 + 136 + 19)) ]);break;end end break;end end else local v190=178 -(103 + 75) ;local v191;while true do if (((2560 -1439)<(12818 -9731)) and (v190==((0 -0) + 0))) then v191=v99[3 -1 ];v97[v191](v97[v191 + 1 ]);break;end end end elseif (((783 + 1148)==(7719 -(4798 + 990))) and (v100>25)) then v79=v99[3];else local v193=547 -(36 + 511) ;local v194;local v195;local v196;while true do if (((5770 -2515)>(30 -12)) and (v193==(257 -((1959 -(289 + 1418)) + 5)))) then local v207=0 + 0 ;while true do if (((6348 -(1095 + 332))>(2725 + 66 + 32)) and (v207==(2 -1))) then v193=2 -1 ;break;end if (((14027 -(26132 -16440))>=(2078 + 20 + 1149)) and (v207==0)) then v194=1171 -(796 + 375) ;v195=nil;v207=3 -2 ;end end end if (((1586 -774)==(1673 -(1233 -(189 + 183)))) and (1==v193)) then v196=nil;while true do if (((206 + 2236)<(1436 + (3418 -(177 + 510)))) and (v194==0)) then local v233=0 + 0 ;local v234;while true do if ((((5249 -(636 + 809)) -((1520 -753) + 1165))>=558) and (v233==(0 -0))) then v234=0;while true do if ((v234==((3858 -2124) -(1662 + 71))) or ((2263 -(276 + 1160))>=4102)) then v194=(2110 -(678 + 847)) -(160 + 424) ;break;end if ((((2889 -(359 + 515)) -(742 + 270))==(2614 -(1067 + 395 + 149))) and ((0 -0)==v234)) then v195=v99[2 -0 ];v196=v97[v195];v234=1 + 0 ;end end break;end end end if (((5749 -(489 + 824))==(17018 -12582)) and (1==v194)) then for v242=v195 + (1 -0) ,v99[3 + 0 ] do v7(v196,v97[v242]);end break;end end break;end end end v79=v79 + 1 + 0 ;break;end if ((1797==1797) and (v104==0)) then local v121=0 -0 ;local v122;while true do if (((1505 + 1306)<(3352 + 289)) and (v121==(0 + 0))) then v122=0 + 0 ;while true do if ((v122==(1 + 0)) or (3904<(1003 + 2084))) then v104=1 -0 ;break;end if (((6700 -(504 + 1493))>=3236) and (v122==0)) then v99=v91[v79];v100=v99[1 + 0 ];v122=3 -2 ;end end break;end end end end break;end end end end;v78=3;end if (v78==1) then v81={...};v82=v12("#",...) -1 ;v78=2;end if (v78==0) then v79=1;v80= -1;v78=1;end end end;end if (v61==0) then v62=v35[1];v63=v35[2];v61=1;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
